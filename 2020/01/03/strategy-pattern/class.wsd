@startuml
Title "鸭子应用"
namespace 客户{

    MallardDuck --|> Duck
    RedheadDuck --|> Duck
    RubberDuck --|> Duck
    DecoyDuck --|> Duck
    Duck -> 封装飞行行为.FlyBehavior
    Duck -> 封装呱呱叫行为.QuackBehavior
    abstract class Duck {
        FlyBehavior flyBehavior
        QuackBehavior quackBehavior
        swim()
        display()
        perfromQuack()
        performFLy()
        setFlyBehavior()
        setQuackBehavior()
    }
    class MallardDuck {
        display()
    }
    class RedheadDuck {
        display()
    }
    class RubberDuck {
        display()
    }
    class DecoyDuck {
        display()
    }
}

namespace 封装飞行行为{
    FlyWithWings ..|> FlyBehavior
    FlyNoWay ..|> FlyBehavior
    interface FlyBehavior {
        fly()
    }
    class FlyWithWings {
        fly()
    }
    class FlyNoWay {
        fly() 
    }

}

namespace 封装呱呱叫行为{
  Quack ..|> QuackBehavior
  Squeak ..|> QuackBehavior
  MuteQuack ..|> QuackBehavior
  interface QuackBehavior {
      quack()
  }
  class Quack {
      quack()
  }
  class Squeak {
      Squeak()
  }
  class MuteQuack {
      MuteQuack()
  }
}
@enduml